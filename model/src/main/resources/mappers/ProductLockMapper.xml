<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.debug.steadyjack.mapper.ProductLockMapper" >
  <resultMap id="BaseResultMap" type="com.debug.steadyjack.entity.ProductLock" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="product_no" property="productNo" jdbcType="VARCHAR" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, product_no, stock, version, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from product_lock
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from product_lock
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.debug.steadyjack.entity.ProductLock" >
    insert into product_lock (id, product_no, stock, 
      version, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{productNo,jdbcType=VARCHAR}, #{stock,jdbcType=INTEGER}, 
      #{version,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.debug.steadyjack.entity.ProductLock" >
    insert into product_lock
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="productNo != null" >
        product_no,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="productNo != null" >
        #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.debug.steadyjack.entity.ProductLock" >
    update product_lock
    <set >
      <if test="productNo != null" >
        product_no = #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="stock != null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.debug.steadyjack.entity.ProductLock" >
    update product_lock
    set product_no = #{productNo,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--更新库存-->
  <update id="updateStock" parameterType="com.debug.steadyjack.entity.ProductLock">
    update product_lock
    set stock = stock - #{stock,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--更新库存-乐观锁v1-->
  <update id="updateStockV1" parameterType="com.debug.steadyjack.entity.ProductLock">
    UPDATE product_lock SET stock = stock - #{stock,jdbcType=INTEGER},version = version + 1
    WHERE id = #{id,jdbcType=INTEGER} AND version=#{version,jdbcType=INTEGER} AND stock>0
  </update>

  <!--更新库存-用于悲观锁的跟踪-->
  <update id="updateStockForNegative" parameterType="com.debug.steadyjack.entity.ProductLock">
    update product_lock
    set stock = stock - #{stock,jdbcType=INTEGER},version=version+1
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--根据主键查询for update 悲观锁-->
  <select id="selectByPKForNegative" resultType="com.debug.steadyjack.entity.ProductLock">
    SELECT <include refid="Base_Column_List"/> FROM product_lock
    WHERE id=#{id} FOR UPDATE
  </select>



</mapper>




















